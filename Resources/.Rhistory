install.packages("tidyverse").
install.packages("tidyverse")
library(tidyverse)
pwd
install.packages("jsonlite")
library(jsonlite)
disney_characters <- c("mickey", "minnie", "donald", "goofy")
presidents <- c("washington", "adams", "jefferson")
numbers_vector <- c(1, 3, 5, 7, 9, 11)
print(disney_characters)
print(presidents)
print(numbers_vector)
presidents[1]
combined_vector <- c(disney_characters, presidents)
combined_vector
for (x in combined_vector) {
print(x)
}
random_list$coins[2]
random_list$coins
random_list <- list("movies"=c("Star Wars", "Titanic", "Avatar"),
"states"=c("California", "Oklahoma", "Texas", "Virginia"),
"coins"=c("penny", "dime", "nickel", "quarter"),
"first_presidents"=presidents,
"nums"=c(1,2,3,4,5),
"bools"=c(T,F,T,T,T,F)
random_list["states"]
typeof(random_list)
disney_characters <- c("mickey", "minnie", "donald", "goofy")
presidents <- c("washington", "adams", "jefferson")
numbers_vector <- c(1, 3, 5, 7, 9, 11)
print(disney_characters)
print(presidents)
print(numbers_vector)
# Part I
students <- c()
students <- c( "Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
'''{r}
presidents[1]
presidents[1]
```{r}
```{r}
```{r}for ()
library(dplyr)
# Simple vectors
# Months of the year
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# Average rainfall/precipitation in NYC during each month
precipitation <- c(3.9, 2.9, 4.1, 3.9, 4.5, 3.5, 4.5, 4.1, 4.0, 3.4, 3.8, 3.6)
print(precipitation)
print(precipitation)
names(precipitation) <- months
names(precipitation) <- months
print(precipitation)
precipitation("Mar")
precipitation["Mar"]
precipitation[["Mar"]]
summary(precipitation)
precip.summary <- summary(precipitation)
precip.summary <- summary(precipitation)
precip.summary[["Min"]]
precip.summary <- summary(precipitation)
precip_summary <- summary(precipitation)
precip_summary[["Min"]]
summary(precipitation)[["Min"]]
summary(precipitation)[["Min."]]
precip_summary <- summary(precipitation)
precip.summary[["Min"]]
install(tidyverse)
library(tidyverse)
precip_summary <- summary(precipitation)
precip_summary[["Min."]]
summary(precipitation)[["Min."]]
library(tidyselect)
read_csv("Resources/data.csv")
set.seed(42)
population1 = rnorm(1000)
sample2 = sample(population1, 200)
t.test(sample2, mu=mean(population1))
set.seed(42)
population1 = rnorm(1000)
population2 = rnorm(1000)
t.test(population1, population2)
population1 = rnorm(1000)
population2 = rnorm(1000, -2)
t.test(population1, population2)
library(tidyverse)
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
mosquito <- read.csv(file="04-Ins_ANOVA\Resources\mosquito.csv")
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
aov(mosq ~ factor(treatment), data=mosquito)
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
ggplot(mosquito,aes(x=factor(treatment),y=mosq))
mosquito <- read.csv(file="04-Ins_ANOVA/Solved/Resources/mosquito.csv")
mosquito <- read.csv(file="../Resources/mosquito.csv")
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
get wd()
getwd()
setwd(C:/Users/16462/Desktop/BootCamp/Module-15)
setwd("C:/Users/16462/Desktop/BootCamp/Module-15")
getwd()
?lm()
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
load("C:/Users/16462/Desktop/BootCamp/Module-15/.RData")
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
library(jsonlite)
library(tidyverse)
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
getwd()
setwd("C:/Users/16462/Desktop/BootCamp/Module-15/MechaCar_Statistical_Analysis")
getwd()
library(dplyr)
dataframe <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
getwd()
setwd("C:/Users/16462/Desktop/BootCamp/Module-15/MechaCar_Statistical_Analysis/Resources")
getwd()
dataframe <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(dataframe)
View(dataframe)
View(mtcars_filt)
View(mtcars_filt)
View(mtcars_filt)
View(dataframe)
View(dataframe)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg) #generate multiple linear regression models
get wd()
getwd()
View(data_2)
View(data)
View(mtcars_filt)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=dataframe) #generate multiple linear regression models
View(dataframe)
View(dataframe)
View(dataframe)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=dataframe)) #generate summary statistics
coil_data <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(coil_data)
library(tidyverse)?mutate()
library(tidyverse)
?mutate()
summary_table <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(coil_data)
summary_table <- coil_data %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(coil_data)
View(coil_data)
View(summary_table)
summary_lot <- coil_data  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(summary_lot)
View(summary_lot)
View(summary_table)
View(coil_data)
t.test(coil_data$PSI,mu=1500)
lot1 <- subset(coil_data, Manufacturing_Lot=="Lot1")
lot2 <- subset(coil_data, Manufacturing_Lot=="Lot2")
lot3 <- subset(coil_data, Manufacturing_Lot=="Lot3")
View(lot1)
View(lot2)
View(lot3)
t.test(lot1$PSI,mu=1500)
t.test(lot2$PSI,mu=1500)
t.test(lot3$PSI,mu=1500)
View(summary_table)
View(summary_lot)
